name: Run Integration Tests

on:
  push:
    branches:
      - dev

jobs:
  get-change-prerelease-tag:
    runs-on:
      - ubuntu-latest
    
    outputs:
      release-candidate: ${{ steps.new-release-candidate-version.outputs.next-version }}
    
    steps:
      - name: Checkout Current Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      
      - name: Get Latest Prerelease Tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
    
      - name: Increment Previous Release Candidate Version
        if: steps.get-latest-tag.outputs.tag != 'v0.0.0'
        uses: christian-draeger/increment-semantic-version@1.0.2
        id: incremented-release-candidate-version
        with:
          current-version: ${{ steps.get-latest-tag.outputs.tag }}
          version-fragment: rc
          
      - name: Get rc_version From VERSION
        if: steps.get-latest-tag.outputs.tag == 'v0.0.0'
        run: echo "::set-output name=RC_VERSION::$(jq -e -r .rc_version VERSION)"
        id: rc_version
        
      - name: Create Initial Release Candidate Version
        if: steps.get-latest-tag.outputs.tag == 'v0.0.0'
        id: initial-release-candidate-version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.rc_version.outputs.RC_VERSION }}
          version-fragment: rc

  print-output-of-previous-job:
    runs-on:
      - ubuntu-latest
      
    needs: 
      - get-change-prerelease-tag
      
    steps:
      - name: Print new-release-candidate-version
        run: echo ${{ needs.get-change-prerelease-tag.outputs.release-candidate }}

      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: jq usage
        run: jq -e .rc_version VERSION
