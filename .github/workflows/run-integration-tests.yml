name: Run Integration Tests

on:
  push:
    branches:
      - dev

env:
  ECR_REGISTRY: "915024619138.dkr.ecr.eu-central-1.amazonaws.com"
  ECR_REPOSITORY: "abra"

jobs:
  get-change-prerelease-tag:
    runs-on:
      - ubuntu-latest
  
    outputs:
      incremented-release-candidate-version: ${{ steps.incremented-release-candidate-version.outputs.next-version }}
      initial-release-candidate-version: ${{ steps.initial-release-candidate-version.outputs.next-version }}
    
    steps:
      - name: Checkout Current Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
        
      - name: Get Latest Prerelease Tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
          
      - name: Get rc_version From VERSION
        run: echo "::set-output name=RC_VERSION::$(jq -e -r .rc_version VERSION)"
        id: rc_version
        
      - name: print
        run: contains('hello', 'e')
        
      - name: Increment Release Candidate
        if: contains("${{ steps.get-latest-tag.outputs.tag }}", "${{ steps.rc_version.outputs.RC_VERSION }}") == true
        id: increment-release-candidate
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.get-latest-tag.outputs.tag }}
          version-fragment: rc        
                
      - name: Create Initial Release Candidate Version
        if: contains(steps.get-latest-tag.outputs.tag, steps.rc_version.outputs.RC_VERSION) == false
        id: new-release-candidate-version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.rc_version.outputs.RC_VERSION }}
          version-fragment: rc

#   build-and-push-docker-image:
#     runs-on:
#       - ubuntu-latest
      
#     needs: 
#       - get-change-prerelease-tag
      
#     steps:
#       - name: incremented-image-tag
#         if: needs.get-change-prerelease-tag.outputs.incremented-release-candidate-version != ''
#         env:
#           IMAGE_TAG: ${{ needs.get-change-prerelease-tag.outputs.incremented-release-candidate-version }}
        
#       - name: initial-image-tag
#         if: needs.get-change-prerelease-tag.outputs.initial-release-candidate-version != ''
#         env:
#           IMAGE_TAG: ${{ needs.get-change-prerelease-tag.outputs.initial-release-candidate-version }}
          
#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: eu-central-1
          
#       - name: Log in to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
